######################################################################
#	ti.mkf : makefile for transfinite induction ProofPower contrib
######################################################################

# suffixes known
.SUFFIXES: .db .doc .dvi .ldd .log .lot .sh .doc .tex .tch
# default target:
default: help

######################################################################
#
#	Makefile Definitions
#
######################################################################


PRODNAME=PPTransInduct
PRODDESC=transfinite inductive definitions and proofs in ProofPower-HOL
SHORTNAME=ti
PPPARENT=maths_egs

VER=$(shell echo $${PPEGSVER:-`cat version 2>/dev/null || date +%y%m%d`})
PRODUCT=$(PRODNAME)-$(VER)
CWD=$(shell pwd)
YEAR=$(shell date +%Y)

USERDB=$(shell echo $$PPDB)
DBNAME=$(shell echo $${PPDB:-$(SHORTNAME)})

DBCREATED=$(SHORTNAME)_db.ldd

RELDIR=release
SRCDIR=$(RELDIR)/$(PRODNAME)-$(VER)

# Control for RCS checking out: expand keywords to values only
# (needed for document dates)
COFLAGS=-kv

# The documents (keep target desc and the list SMLDOCS in step!)
desc:
	@echo "t005.doc: Well-Founded Relations and Recursion"
	@echo "t006.doc: Miscellanea"
	@echo "t007.doc: Inductive and Co-inductive Definitions"
	@echo "t009.doc: Well-Orderings and Well-Foundedness"
	@echo "t010.doc: Miscellaneous Tactics"
	@echo "t048.doc: Iterative Foundational Ontologies"
	@echo "t051.doc: Strong Infinity"
	@echo "u001.doc: Infinitary Inductive Collections"
	@echo "u002.doc: Strong Infinity"

vars:

SMLDOCS=
SMLDOCS+=	t005.doc	# Well-Founded Relations and Recursion
SMLDOCS+=	t006.doc	# Miscellanea
SMLDOCS+=	t007.doc	# Inductive and Co-inductive Definitions
SMLDOCS+=	t009.doc	# Well-Orderings and Well-Foundedness
SMLDOCS+=	t010.doc	# Miscellaneous Tactics
SMLDOCS+=	t048.doc	# Iterative Foundational Ontologies
#SMLDOCS+=	t051.doc	# Strong Infinity
SMLDOCS+=	u001.doc	# Infinitary Inductive Collections
SMLDOCS+=	u002.doc	# Strong Infinity

# Variations on the documents
SMLFILES=	$(SMLDOCS:.doc=.sml)
LDDFILES=	$(SMLDOCS:.doc=.ldd)
DVIFILES=	$(SMLDOCS:.doc=.dvi)
PDFFILES=	$(SMLDOCS:.doc=.pdf)

TMPFILES=	$(SMLDOCS:.doc=.aux)
TMPFILES+=	$(SMLDOCS:.doc=.bbl)
TMPFILES+=	$(SMLDOCS:.doc=.blg)
TMPFILES+=	$(SMLDOCS:.doc=.idx)
TMPFILES+=	$(SMLDOCS:.doc=.log)
TMPFILES+=	$(SMLDOCS:.doc=.lot)
TMPFILES+=	$(SMLDOCS:.doc=.sid)
TMPFILES+=	$(SMLDOCS:.doc=.tex)
TMPFILES+=	$(SMLDOCS:.doc=.toc)
TMPFILES+=	$(SMLDOCS:.doc=.th.doc)
TMPFILES+=	$(SMLDOCS:.doc=.th.tex)
TMPFILES+=	$(SMLDOCS:.doc=.th.aux)

# packing list for a source release (target src)
PACKINGLIST=
PACKINGLIST+= t005.doc
PACKINGLIST+= t006.doc
PACKINGLIST+= t007.doc
PACKINGLIST+= t009.doc
PACKINGLIST+= t010.doc
PACKINGLIST+= t048.doc
#PACKINGLIST+= t051.doc
PACKINGLIST+= u001.doc
PACKINGLIST+= u002.doc
PACKINGLIST+= ti.mkf
PACKINGLIST+= list_wa.sml

DISTPACKINGLIST=$(PACKINGLIST) README.txt

# useful target to print out the names of all the files in the source $(RELDIR)
packinglist:
	@echo $(PACKINGLIST)

######################################################################
#
#	Display help text
#
######################################################################

help:
	@echo '**** $(PRODNAME): $(PRODDESC) ****'
	@echo ''
	@echo 'The following commands load the specification and proof scripts into a'
	@echo 'new database called $(SHORTNAME) and then typeset the documents in DVI or'
	@echo 'PDF format respectively.'
	@echo ''
	@echo '    make -f $(SHORTNAME).mkf dvi'
	@echo '    make -f $(SHORTNAME).mkf pdf'
	@echo ''
	@echo 'The following command loads the specification and proof scripts into an'
	@echo 'existing database $$HOME/wrk/mydb.'
	@echo ''
	@echo '    PPDB=$$HOME/wrk/mydb make -f $(SHORTNAME).mkf load'
	@echo ''
	@echo 'The following command removes all the files made by this makefile.'
	@echo 'Do this between runs of the other commands.'
	@echo ''
	@echo '    make -f $(SHORTNAME).mkf clean'
	@echo ''
	@echo 'The following command is for developers. It builds the distribution'
	@echo 'tarball from the source repository.'
	@echo ''
	@echo '    make -f $(SHORTNAME).mkf dist'


######################################################################
#
# Dependencies - determining the order of compilation
#
######################################################################

t005.ldd: t006.ldd
t006.ldd: t010.ldd
t007.ldd: t006.ldd t009.ldd
t009.ldd: t006.ldd
t010.ldd: $(DBCREATED)
t048.ldd: t006.ldd
t051.ldd: t005.ldd t007.ldd t009.ldd t048.ldd
u001.ldd: u002.ldd
u002.ldd: t009.ldd

######################################################################
#
# Dependencies - describing which documents depend on which theory listings
#
######################################################################

tc.th.doc wfrel.th.doc wf_relp.th.doc wf_recp.th.doc: t005.ldd
t005.pdf: tc.th.tex wfrel.th.tex wf_relp.th.tex wf_recp.th.tex

rbjmisc.th.doc: t006.ldd
t006.pdf: rbjmisc.th.tex

fixp.th.doc: t007.ldd
t007.pdf: fixp.th.tex

ordered_sets.th.doc U_orders.th.doc: t009.ldd
t009.dvi: ordered_sets.th.tex U_orders.th.tex

t048a.th.doc: t048.ldd
t048.pdf: t048a.th.tex t048.stats.tex

ordcard0.th.doc ordcard.th.doc: t051.ldd
t051.pdf: ordcard0.th.tex ordcard.th.tex

iic.th.doc: u001.ldd
u001.pdf: iic.th.tex

u002.th.doc many.th.doc: u002.ldd
u002.pdf: u002.th.tex many.th.tex

# some variables and rules concerning document preparation

# theory listing documents

HTHS=	 tc.th wfrel.th wf_relp.th wf_recp.th \
	 rbjmisc.th \
	 fixp.th \
	 ordered_sets.th U_orders.th \
	 t048a.th \
	 ordcard0.th.doc ordcard.th \
	 iic.th.doc \
	 u001.th.doc u002.th.doc many.th.doc

HTHDOCS=$(HTHS:.th=.th.doc)

######################################################################
#
#	Building the database
#
######################################################################

load: bld

bld: $(LDDFILES)

$(DBCREATED):
ifeq ($(USERDB),)
	pp_make_database -f -p $(PPPARENT) $(DBNAME)
endif
	touch $(DBCREATED)

######################################################################
#
#	Building the documents
#
######################################################################

dvi: $(DVIFILES)

pdf: $(PDFFILES)

######################################################################
#
#	Constructing source release directories
#
######################################################################

reldir:
	if [ "$${PPTARGETDIR:-}" = "" ]; \
	then \
		rm -rf $(RELDIR); \
	fi
	[ -d   $(RELDIR) ] || mkdir $(RELDIR)
	

srcdir:	reldir
	[ -d   $(SRCDIR) ] || mkdir $(SRCDIR)

rcsrel:	srcdir
	[ -d   $(SRCDIR)/RCS ] || mkdir $(SRCDIR)/RCS
	@for f in $(PACKINGLIST); \
	do \
		cp RCS/$$f,v $(SRCDIR)/RCS/$$f,v; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

rcs:	rcsrel
	cd $(RELDIR) && tar cvf "$(CWD)/$(PRODUCT).rcs.tar" ./*
	cd "$(CWD)" && gzip $(PRODUCT).rcs.tar && \
	mv $(PRODUCT).rcs.tar.gz $(PRODUCT).rcs.tgz

srcrel: srcdir $(DISTPACKINGLIST)
	@for f in $(DISTPACKINGLIST); \
	do \
		cp $$f $(SRCDIR)/$$f; \
	done
	chmod -R a-w $(RELDIR)
	chmod -R g-w $(RELDIR)
	chmod -R u+w $(RELDIR)

src:	srcrel
	cd $(RELDIR) && tar cvf "$(CWD)/$(PRODUCT).tar" ./*
	cd "$(CWD)" && gzip $(PRODUCT).tar && \
	mv $(PRODUCT).tar.gz $(PRODUCT).tgz

dist:	src

######################################################################
#
#	Building the README file.
#
######################################################################

README.txt:
	for line in \
	'################################################################################' \
	'#' \
	'# $(PRODNAME): $(PRODDESC)' \
	'#' \
	'# Use the make file $(SHORTNAME).mkf  to process the scripts.' \
	'# For instructions on how to do this type:' \
	'#' \
	'#     make -f $(SHORTNAME).mkf' \
	'#' \
	'# and you will be given some help on using the make file.' \
	'#' \
	'# Copyright (c) 2005-$(YEAR) Lemma 1 Ltd.' \
	'#' \
	'# This file is supplied under the GNU General Public Licence (GPL) version 2.' \
	'#' \
	'# See the file LICENSE supplied with the ProofPower source for the terms' \
	'# of the GPL or visit the OpenSource web site at http://www.opensource.org/' \
	'#' \
	'#' \
	'################################################################################' ;\
	do echo $$line ; done >README.txt


######################################################################
#
#	Generic Rules
#
######################################################################

%.ldd: %.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Compiling (code)" $<
	@pp -d $(DBNAME) -f $< >$*.err
	@mv $*.err $@

$(HTHDOCS): %.th.doc: list_wa.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Listing hol theory: " $*
	@hol_list -d $(DBNAME) -i list_wa.sml $* >$*.err
	sed -e 's/val it = (): unit//' $*.err >$@

%.sml: %.doc
	docsml $*

%.tex: %.doc
	doctex $*

%.dvi: %.tex
	docdvi $*

%.pdf: %.dvi
	dvipdf -sPAPERSIZE=a4 $*

######################################################################
#
#	Tidying Up
#
######################################################################

clean:
	rcsclean || true
	rm -f $(DBCREATED) $(SHORTNAME).polydb README.txt
	rm -f $(PRODUCT).tgz $(PRODUCT).rcs.tgz
	rm -f $(SMLFILES) $(LDDFILES) $(DVIFILES) $(PDFFILES) $(TMPFILES)
	rm -rf release
